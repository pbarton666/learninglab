#!wing
#!version=6.0
##################################################################
# Wing IDE project file : User-specific branch                   #
##################################################################
[user attributes]
debug.breakpoints = {loc('../../../Anaconda/envs/py37/Lib/site-packages/nbformat/converter.py'): {29L: (0,
        None,
        1,
        0)},
                     loc('basic_operations/sports.py'): {4: (0,
        None,
        1,
        0)},
                     loc('convert.py'): {2L: (0,
        None,
        1,
        0)},
                     loc('scratch.py'): {13L: (0,
        None,
        1,
        0),
        32L: (0,
              None,
              1,
              0),
        78L: (0,
              None,
              1,
              0)},
                     loc('sports_data_tab.py'): {62L: (0,
        None,
        1,
        0)},
                     loc('spreadsheet_functions.py'): {42L: (0,
        None,
        1,
        0)},
                     loc('work_with_openpyxl.py'): {12L: (0,
        None,
        1,
        0)}}
debug.err-values = {loc('work_with_openpyxl.py'): {}}
debug.show-args-dialog = {loc('basic_operations/sports.py'): False,
                          loc('convert.py'): False,
                          loc('custom_utils/display_wide.py'): False,
                          loc('custom_utils/utilities.py'): False,
                          loc('scratch.py'): False,
                          loc('sports.py'): False,
                          loc('sports_compressed.py'): False,
                          loc('sports_data_tab.py'): False,
                          loc('spreadsheet_functions.py'): False,
                          loc('work_with_openpyxl.py'): False}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'Jq7gTV7yzBPEX5txsRIH56qXTR'\
        'a3XuCT',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [3,
                                   0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.21139240506329116,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by ext',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [(2,)],
                                 'selected-nodes': [(2,
        12)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../../../Anaconda/envs/py35/Lib/cProfile.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Anaconda/envs/py35/Lib/cProfile.py'),
                      'label')]},
        loc('../../../Anaconda/envs/py35/Lib/logging/__init__.py'): {'expand'\
        'ed-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Anaconda/envs/py35/Lib/logging/__init__.py'),
                      'addLevelName')]},
        loc('../../../Anaconda/envs/py35/Lib/pstats.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Anaconda/envs/py35/Lib/pstats.py'),
                      'add_callers')]},
        loc('../../../Anaconda/envs/py35/Lib/site-packages/openpyxl/formatting/formatting.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Anaconda/envs/py35/Lib/site-packages/openpyxl/formatting/formatting.py'),
                      'ConditionalFormatting')]},
        loc('../../../Anaconda/envs/py35/Lib/site-packages/openpyxl/formatting/rule.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Anaconda/envs/py35/Lib/site-packages/openpyxl/formatting/rule.py'),
                      'CellIsRule')]},
        loc('../../../Anaconda/envs/py35/Lib/site-packages/pandas/core/computation/scope.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Anaconda/envs/py35/Lib/site-packages/pandas/core/computation/scope.py'),
                      'Scope')]},
        loc('../../../Anaconda/envs/py35/Lib/site-packages/pandas/core/dtypes/cast.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Anaconda/envs/py35/Lib/site-packages/pandas/core/dtypes/cast.py'),
                      'astype_nansafe')]},
        loc('../../../Anaconda/envs/py35/Lib/site-packages/pandas/core/frame.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Anaconda/envs/py35/Lib/site-packages/pandas/core/frame.py'),
                      'DataFrame')]},
        loc('../../../Anaconda/envs/py35/Lib/site-packages/pandas/core/generic.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Anaconda/envs/py35/Lib/site-packages/pandas/core/generic.py'),
                      'NDFrame')]},
        loc('../../../Anaconda/envs/py35/Lib/site-packages/pandas/core/ops.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Anaconda/envs/py35/Lib/site-packages/pandas/core/ops.py'),
                      'add_flex_arithmetic_methods')]},
        loc('../../../Anaconda/envs/py35/lib/site-packages/openpyxl/cell/cell.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Anaconda/envs/py35/lib/site-packages/openpyxl/cell/cell.py'),
                      'Cell')]},
        loc('../../../Anaconda/envs/py35/lib/site-packages/openpyxl/styles/cell_style.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Anaconda/envs/py35/lib/site-packages/openpyxl/styles/cell_style.py'),
                      'ArrayDescriptor')]},
        loc('../../../Anaconda/envs/py35/lib/site-packages/openpyxl/styles/fonts.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../Anaconda/envs/py35/lib/site-packages/openpyxl/styles/fonts.py'),
                      'DEFAULT_FONT')]},
        loc('../../../Anaconda/envs/py35/lib/site-packages/openpyxl/styles/numbers.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../Anaconda/envs/py35/lib/site-packages/openpyxl/styles/numbers.py'),
                      'BUILTIN_FORMATS')]},
        loc('../../../Anaconda/envs/py35/lib/site-packages/openpyxl/styles/styleable.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Anaconda/envs/py35/lib/site-packages/openpyxl/styles/styleable.py'),
                      'NamedStyleDescriptor')]},
        loc('../../../Anaconda/envs/py35/lib/site-packages/pandas/compat/__init__.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Anaconda/envs/py35/lib/site-packages/pandas/compat/__init__.py'),
                      'add_metaclass')]},
        loc('../../../Anaconda/envs/py35/lib/site-packages/pandas/util/testing.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Anaconda/envs/py35/lib/site-packages/pandas/util/testing.py'),
                      'add_nans')]},
        loc('../../../Anaconda/envs/py37/Lib/_bootlocale.py'): {'expanded-no'\
        'des': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Anaconda/envs/py37/Lib/_bootlocale.py'),
                      'getpreferredencoding')]},
        loc('../../../Anaconda/envs/py37/Lib/genericpath.py'): {'expanded-no'\
        'des': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Anaconda/envs/py37/Lib/genericpath.py'),
                      'commonprefix')]},
        loc('../../../Anaconda/envs/py37/Lib/json/__init__.py'): {'expanded-'\
        'nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../Anaconda/envs/py37/Lib/json/decoder.py'),
                      '')]},
        loc('../../../Anaconda/envs/py37/Lib/pprint.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Anaconda/envs/py37/Lib/pprint.py'),
                      'isreadable')]},
        loc('../../../Anaconda/envs/py37/Lib/site-packages/IPython/core/formatters.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Anaconda/envs/py37/Lib/site-packages/IPython/core/formatters.py'),
                      'BaseFormatter')]},
        loc('../../../Anaconda/envs/py37/Lib/site-packages/nbformat/converter.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Anaconda/envs/py37/Lib/site-packages/nbformat/converter.py'),
                      'convert')]},
        loc('../../../Anaconda/envs/py37/Lib/site-packages/numpy/lib/function_base.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Anaconda/envs/py37/Lib/site-packages/numpy/lib/function_base.py'),
                      'angle')]},
        loc('../../../Anaconda/envs/py37/Lib/site-packages/openpyxl/compat/__init__.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../Anaconda/envs/py37/Lib/site-packages/openpyxl/compat/abc.py'),
                      '')]},
        loc('../../../Anaconda/envs/py37/Lib/site-packages/openpyxl/descriptors/base.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Anaconda/envs/py37/Lib/site-packages/openpyxl/descriptors/base.py'),
                      'Alias')]},
        loc('../../../Anaconda/envs/py37/Lib/site-packages/openpyxl/descriptors/serialisable.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../Anaconda/envs/py37/Lib/site-packages/openpyxl/descriptors/serialisable.py'),
                      'KEYWORDS')]},
        loc('../../../Anaconda/envs/py37/Lib/site-packages/openpyxl/drawing/geometry.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Anaconda/envs/py37/Lib/site-packages/openpyxl/drawing/geometry.py'),
                      'AdjPoint2D')]},
        loc('../../../Anaconda/envs/py37/Lib/site-packages/openpyxl/packaging/relationship.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Anaconda/envs/py37/Lib/site-packages/openpyxl/packaging/relationship.py'),
                      'get_dependents')]},
        loc('../../../Anaconda/envs/py37/Lib/site-packages/openpyxl/reader/drawings.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Anaconda/envs/py37/Lib/site-packages/openpyxl/reader/drawings.py'),
                      'find_images')]},
        loc('../../../Anaconda/envs/py37/Lib/site-packages/openpyxl/reader/excel.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Anaconda/envs/py37/Lib/site-packages/openpyxl/reader/excel.py'),
                      'ExcelReader')]},
        loc('../../../Anaconda/envs/py37/Lib/site-packages/openpyxl/workbook/workbook.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../Anaconda/envs/py37/Lib/site-packages/openpyxl/workbook/workbook.py'),
                      'INTEGER_TYPES')]},
        loc('../../../Anaconda/envs/py37/Lib/site-packages/openpyxl/worksheet/worksheet.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../Anaconda/envs/py37/Lib/site-packages/openpyxl/worksheet/worksheet.py'),
                      'range')]},
        loc('../../../Anaconda/envs/py37/Lib/site-packages/openpyxl/writer/excel.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Anaconda/envs/py37/Lib/site-packages/openpyxl/writer/excel.py'),
                      'ExcelWriter')]},
        loc('../../../Anaconda/envs/py37/Lib/site-packages/pandas/core/apply.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Anaconda/envs/py37/Lib/site-packages/pandas/core/apply.py'),
                      'FrameApply')]},
        loc('../../../Anaconda/envs/py37/Lib/site-packages/pandas/core/common.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Anaconda/envs/py37/Lib/site-packages/pandas/core/common.py'),
                      'apply_if_callable')]},
        loc('../../../Anaconda/envs/py37/Lib/site-packages/pandas/core/dtypes/cast.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Anaconda/envs/py37/Lib/site-packages/pandas/core/dtypes/cast.py'),
                      'astype_nansafe')]},
        loc('../../../Anaconda/envs/py37/Lib/site-packages/pandas/core/frame.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Anaconda/envs/py37/Lib/site-packages/pandas/core/frame.py'),
                      'DataFrame')]},
        loc('../../../Anaconda/envs/py37/Lib/site-packages/pandas/core/generic.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Anaconda/envs/py37/Lib/site-packages/pandas/core/generic.py'),
                      'NDFrame')]},
        loc('../../../Anaconda/envs/py37/Lib/site-packages/pandas/core/indexes/base.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Anaconda/envs/py37/Lib/site-packages/pandas/core/indexes/base.py'),
                      'default_index')]},
        loc('../../../Anaconda/envs/py37/Lib/site-packages/pandas/core/indexes/numeric.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Anaconda/envs/py37/Lib/site-packages/pandas/core/indexes/numeric.py'),
                      'Float64Index')]},
        loc('../../../Anaconda/envs/py37/Lib/site-packages/pandas/core/indexing.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Anaconda/envs/py37/Lib/site-packages/pandas/core/indexing.py'),
                      'check_bool_indexer')]},
        loc('../../../Anaconda/envs/py37/Lib/site-packages/pandas/core/internals/managers.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Anaconda/envs/py37/Lib/site-packages/pandas/core/internals/managers.py'),
                      'BlockManager')]},
        loc('../../../Anaconda/envs/py37/Lib/site-packages/pandas/core/series.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Anaconda/envs/py37/Lib/site-packages/pandas/core/series.py'),
                      'remove_na')]},
        loc('../../../Anaconda/envs/py37/Lib/site-packages/pandas/io/common.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Anaconda/envs/py37/Lib/site-packages/pandas/io/common.py'),
                      'BaseIterator')]},
        loc('../../../Anaconda/envs/py37/Lib/site-packages/pandas/io/excel/_util.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Anaconda/envs/py37/Lib/site-packages/pandas/io/excel/_util.py'),
                      'get_writer')]},
        loc('../../../Anaconda/envs/py37/Lib/site-packages/pandas/io/excel/_xlrd.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Anaconda/envs/py37/Lib/site-packages/pandas/io/excel/_xlrd.py'),
                      '_XlrdReader')]},
        loc('../../../Anaconda/envs/py37/Lib/site-packages/pandas/io/formats/excel.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../Anaconda/envs/py37/Lib/site-packages/pandas/io/formats/excel.py'),
                      'CSSToExcelConverter')]},
        loc('../../../Anaconda/envs/py37/Lib/site-packages/xlrd/__init__.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../Anaconda/envs/py37/Lib/site-packages/xlrd/biffh.py'),
                      '')]},
        loc('../../../Anaconda/envs/py37/Lib/site-packages/xlsxwriter/workbook.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../../../Anaconda/envs/py37/Lib/site-packages/xlsxwriter/workbook.py'),
                             'WorksheetMeta')]],
        'top-node': [('class def',
                      loc('../../../Anaconda/envs/py37/Lib/site-packages/xlsxwriter/workbook.py'),
                      'Workbook')]},
        loc('../../../Anaconda/envs/py37/Lib/zipfile.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../Anaconda/envs/py37/Lib/zipfile.py'),
                      'BadZipfile')]},
        loc('../Desktop/court_cases.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../larry_drucker_2019/drucker/court_cases.py'),
                      'url')]},
        loc('../Desktop/mandelbrot.ipynb.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../Desktop/test_comprehensions.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../Desktop/test_comprehensions.py'),
                      'as_list')]},
        loc('../Desktop/test_performance.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../Desktop/test_performance.py'),
                      'a')]},
        loc('../_larry_drucker 2018_local_backup_only/drucker/drucker_python/_top_level_aggregation/settings.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../_larry_drucker 2018_local_backup_only/drucker/drucker_python/utilities/utilities.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../_larry_drucker 2018_local_backup_only/drucker/drucker_python/utilities/utilities.py'),
                      'abs_path')]},
        loc('../larry_drucker_2019/drucker/court_cases.py'): {'expanded-node'\
        's': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../larry_drucker_2019/drucker/current_wave_data/_top_level_aggregation/reports/py_zip.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../larry_drucker_2019/drucker/current_wave_data/_top_level_aggregation/reports/py_zip.py'),
                      'absolute_path')]},
        loc('../larry_drucker_2019/drucker/drucker_python/Korngold/korn_parse.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../larry_drucker_2019/drucker/drucker_python/Korngold/korn_parse.py'),
                      'DEPRECATEDkorn_score')]},
        loc('../larry_drucker_2019/drucker/drucker_python/Korngold/settings.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../larry_drucker_2019/drucker/drucker_python/Korngold/settings.py'),
                      'history_fn_current')]},
        loc('../larry_drucker_2019/drucker/drucker_python/NPS/settings_nps.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../larry_drucker_2019/drucker/drucker_python/NPS/settings_nps.py'),
                      'atomic_fn')]},
        loc('../larry_drucker_2019/drucker/drucker_python/_report_generators/DEPRECATEDaggregation_dicts.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../larry_drucker_2019/drucker/drucker_python/_report_generators/DEPRECATEDaggregation_dicts.py'),
                      'cust_sat_agg_dir')]},
        loc('../larry_drucker_2019/drucker/drucker_python/_report_generators/build_history_tables.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../larry_drucker_2019/drucker/drucker_python/_report_generators/build_history_tables.py'),
                      'add_data_cols')]},
        loc('../larry_drucker_2019/drucker/drucker_python/_report_generators/field_id_maps.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../larry_drucker_2019/drucker/drucker_python/_report_generators/history_settings.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../larry_drucker_2019/drucker/drucker_python/_report_generators/history_settings.py'),
                      'base_report_name')]},
        loc('../larry_drucker_2019/drucker/drucker_python/_report_generators/produce_single_reports.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../larry_drucker_2019/drucker/drucker_python/_report_generators/produce_single_reports.py'),
                      'a')]},
        loc('../larry_drucker_2019/drucker/drucker_python/_report_generators/produce_single_reports_backup.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../larry_drucker_2019/drucker/drucker_python/_report_generators/produce_single_reports_backup.py'),
                      'app')]},
        loc('../larry_drucker_2019/drucker/drucker_python/_report_generators/produce_single_reports_bak.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../larry_drucker_2019/drucker/drucker_python/_report_generators/produce_single_reports_bak.py'),
                      'app')]},
        loc('../larry_drucker_2019/drucker/drucker_python/_report_generators/settings.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../larry_drucker_2019/drucker/drucker_python/_report_generators/sorter_routines.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../larry_drucker_2019/drucker/drucker_python/_report_generators/sorter_routines.py'),
                      'a')]},
        loc('../larry_drucker_2019/drucker/drucker_python/_report_generators/write_company_spreadsheets.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../larry_drucker_2019/drucker/drucker_python/_report_generators/write_company_spreadsheets.py'),
                      'create_workbook')]},
        loc('../larry_drucker_2019/drucker/drucker_python/_report_generators/write_company_spreadsheets_bak.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../larry_drucker_2019/drucker/drucker_python/_report_generators/write_company_spreadsheets.py'),
                      'create_workbook')]},
        loc('../larry_drucker_2019/drucker/drucker_python/_top_level_aggregation/DEPRECATEDaggregation_dicts.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../larry_drucker_2019/drucker/drucker_python/_top_level_aggregation/aggregation_dicts.py'),
                      'cust_sat_agg_dir')]},
        loc('../larry_drucker_2019/drucker/drucker_python/_top_level_aggregation/_reports_and_databases/build_history_tables.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../larry_drucker_2019/drucker/drucker_python/_top_level_aggregation/_reports_and_databases/build_history_tables.py'),
                      'path')]},
        loc('../larry_drucker_2019/drucker/drucker_python/_top_level_aggregation/aggregation_dicts.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../larry_drucker_2019/drucker/drucker_python/_top_level_aggregation/aggregation_dicts.py'),
                      'cust_sat_agg_dir')]},
        loc('../larry_drucker_2019/drucker/drucker_python/_top_level_aggregation/build_drucker_index_v3.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../larry_drucker_2019/drucker/drucker_python/_top_level_aggregation/build_drucker_index_v3.py'),
                      'a')]},
        loc('../larry_drucker_2019/drucker/drucker_python/_top_level_aggregation/produce_single_reports.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../larry_drucker_2019/drucker/drucker_python/_top_level_aggregation/produce_single_reports.py'),
                             'write_report')]],
        'top-node': [('generic attribute',
                      loc('../larry_drucker_2019/drucker/drucker_python/_top_level_aggregation/produce_single_reports.py'),
                      'app')]},
        loc('../larry_drucker_2019/drucker/drucker_python/_top_level_aggregation/qa_settings.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../larry_drucker_2019/drucker/drucker_python/_top_level_aggregation/qa_settings.py'),
                      'actual_pre')]},
        loc('../larry_drucker_2019/drucker/drucker_python/_top_level_aggregation/qa_some_data_files.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../larry_drucker_2019/drucker/drucker_python/_top_level_aggregation/qa_some_data_files.py'),
                      'run_qa')]},
        loc('../larry_drucker_2019/drucker/drucker_python/_top_level_aggregation/settings.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../larry_drucker_2019/drucker/drucker_python/_top_level_aggregation/settings_v3.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../larry_drucker_2019/drucker/drucker_python/_top_level_aggregation/settings_v3.py'),
                      'factor_scores')]},
        loc('../larry_drucker_2019/drucker/drucker_python/_top_level_aggregation/sorter_routines.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../larry_drucker_2019/drucker/drucker_python/_top_level_aggregation/sorter_routines.py'),
                      'a')]},
        loc('../larry_drucker_2019/drucker/drucker_python/_top_level_aggregation/write_company_spreadsheets.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../larry_drucker_2019/drucker/drucker_python/_top_level_aggregation/write_company_spreadsheets.py'),
                             'x')]],
        'top-node': [('function def',
                      loc('../larry_drucker_2019/drucker/drucker_python/_top_level_aggregation/write_company_spreadsheets.py'),
                      'create_workbook')]},
        loc('../larry_drucker_2019/drucker/drucker_python/agg_emp/run_the_assembler.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../larry_drucker_2019/drucker/drucker_python/agg_emp/run_the_assembler.py'),
                      'a')]},
        loc('../larry_drucker_2019/drucker/drucker_python/agg_inno/create_raw_dicts.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../larry_drucker_2019/drucker/drucker_python/agg_inno/create_raw_dicts.py'),
                      'master')]},
        loc('../larry_drucker_2019/drucker/drucker_python/agg_inno/run_the_assembler.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../larry_drucker_2019/drucker/drucker_python/agg_inno/run_the_assembler.py'),
                      'a')]},
        loc('../larry_drucker_2019/drucker/drucker_python/agg_inno/settings.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../larry_drucker_2019/drucker/drucker_python/agg_inno/settings.py'),
                      'skip_screen_for_drucker_firms')]},
        loc('../larry_drucker_2019/drucker/drucker_python/agg_soc_resp/run_the_assembler.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../larry_drucker_2019/drucker/drucker_python/agg_soc_resp/run_the_assembler.py'),
                      'logger')]},
        loc('../larry_drucker_2019/drucker/drucker_python/assembler/assembler_dict_template.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../larry_drucker_2019/drucker/drucker_python/assembler/assembler_dict_template.py'),
                      'test_specs')]},
        loc('../larry_drucker_2019/drucker/drucker_python/assembler/settings.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../larry_drucker_2019/drucker/drucker_python/assembler/settings.py'),
                      'encoding')]},
        loc('../larry_drucker_2019/drucker/drucker_python/hip/hip_parse.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../larry_drucker_2019/drucker/drucker_python/hip/hip_parse.py'),
                             'sdf')]],
        'top-node': [('generic attribute',
                      loc('../larry_drucker_2019/drucker/drucker_python/hip/hip_parse.py'),
                      'col')]},
        loc('../larry_drucker_2019/drucker/drucker_python/hip/settings.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../larry_drucker_2019/drucker/drucker_python/hip/settings.py'),
                      'col_renames')]},
        loc('../larry_drucker_2019/drucker/drucker_python/inno_handfield/han_parse.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../larry_drucker_2019/drucker/drucker_python/inno_handfield/han_parse.py'),
                      'a')]},
        loc('../larry_drucker_2019/drucker/drucker_python/inno_handfield/settings.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../larry_drucker_2019/drucker/drucker_python/inno_handfield/settings.py'),
                      'data_cols')]},
        loc('../larry_drucker_2019/drucker/drucker_python/patent_value/pat_val_parse.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../larry_drucker_2019/drucker/drucker_python/patent_value/pat_val_parse.py'),
                      'acquire_data_pat_val')]},
        loc('../larry_drucker_2019/drucker/drucker_python/patent_value/settings.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../larry_drucker_2019/drucker/drucker_python/patent_value/settings.py'),
                      'cols_to_delete')]},
        loc('../larry_drucker_2019/drucker/drucker_python/payscale/notes.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../larry_drucker_2019/drucker/drucker_python/payscale/ps_parse.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../larry_drucker_2019/drucker/drucker_python/payscale/ps_parse.py'),
                      'ps_parse')]},
        loc('../larry_drucker_2019/drucker/drucker_python/payscale/settings.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../larry_drucker_2019/drucker/drucker_python/payscale/settings.py'),
                      'col_renames')]},
        loc('../larry_drucker_2019/drucker/drucker_python/test_scripts/archive_files.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../larry_drucker_2019/drucker/drucker_python/test_scripts/archive_files.py'),
                      'a')]},
        loc('../larry_drucker_2019/drucker/drucker_python/test_scripts/format_excel.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../larry_drucker_2019/drucker/drucker_python/test_scripts/format_excel.py'),
                      'a')]},
        loc('../larry_drucker_2019/drucker/drucker_python/test_scripts/qa_settings.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../larry_drucker_2019/drucker/drucker_python/test_scripts/qa_settings.py'),
                      'actual_pre')]},
        loc('../larry_drucker_2019/drucker/drucker_python/test_scripts/test_index_change_axis0.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../larry_drucker_2019/drucker/drucker_python/test_scripts/test_index_change_axis0.py'),
                      'a')]},
        loc('../larry_drucker_2019/drucker/drucker_python/utilities/trends.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../larry_drucker_2019/drucker/drucker_python/utilities/trends.py'),
                      'apply_trend')]},
        loc('../larry_drucker_2019/drucker/drucker_python/utilities/utilities.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../larry_drucker_2019/drucker/drucker_python/utilities/utilities.py'),
                      'abs_path')]},
        loc('convert.py'): {'expanded-nodes': [],
                            'selected-nodes': [],
                            'top-node': None},
        loc('custom_utils/display_wide.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('custom_utils/display_wide.py'),
                      'DEPRECATEDmulti_table')]},
        loc('custom_utils/utilities.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('custom_utils/utilities.py'),
                      'create_sports_data')]},
        loc('scratch.py'): {'expanded-nodes': [],
                            'selected-nodes': [[('generic attribute',
        loc('scratch.py'),
        'a')]],
                            'top-node': [('generic attribute',
        loc('scratch.py'),
        'a')]},
        loc('support_files/sports.csv'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../test_local_drucker_reports/general_settings.py'): {'expanded'\
        '-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../test_local_drucker_reports/produce_single_reports.py'): {'ex'\
        'panded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../test_local_drucker_reports/produce_single_reports.py'),
                      'app')]},
        loc('../test_local_drucker_reports/py_zip.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../test_local_drucker_reports/py_zip.py'),
                      'absolute_path')]},
        loc('../test_local_drucker_reports/settings.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../test_local_drucker_reports/settings.py'),
                      'coef_score_fn')]},
        loc('../test_local_drucker_reports/utilities.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../test_local_drucker_reports/utilities.py'),
                      'abs_path')]},
        loc('../test_local_drucker_reports/write_company_spreadsheets.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../test_local_drucker_reports/write_company_spreadsheets.py'),
                      'create_workbook')]},
        loc('notes.py'): {'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': None},
        loc('sports.py'): {'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': [('function def',
        loc('sports.py'),
        'create_data')]},
        loc('sports_compressed.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('function def',
        loc('sports_compressed.py'),
        'create_data')]},
        loc('sports_data_tab.py'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': [('generic attribute',
        loc('sports_data_tab.py'),
        'a')]},
        loc('spreadsheet_functions.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('spreadsheet_functions.py'),
                      'a')]},
        loc('update_sports.py'): {'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': [('function def',
        loc('sports.py'),
        'create_data')]},
        loc('work_with_openpyxl.py'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('generic attribute',
        loc('work_with_openpyxl.py'),
        'a')]},
        loc('unknown:<untitled> #88'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None}},
                                'browse_mode': u'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('snippets',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [3,
                          3],
        'notebook_display': 'normal',
        'notebook_percent': 0.47412587412587415,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': u'..\\..\\..\\..\\Program Files (x86)\\Wing IDE 5.1\\bin\\coding',
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': u'logging.info',
                                       'fReverse': True,
                                       'fSearchText': u'apply(',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': u'',
                                       'fReverse': True,
                                       'fSearchText': u'%',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {'tree-state': []}),
                     ('testing',
                      'wide',
                      0,
                      {}),
                     ('debug-stack',
                      'wide',
                      0,
                      {'codeline-mode': 'below'}),
                     ('debug-io',
                      'wide',
                      2,
                      {}),
                     ('bookmarks',
                      'wide',
                      2,
                      {}),
                     ('debug-watch',
                      'wide',
                      2,
                      {'node-states': [('symbolic',
        ['data_fr',
         'columns']),
                                       ('symbolic',
        ['data_fr',
         'columns']),
                                       ('symbolic',
        ['k',
         '0']),
                                       ('symbolic',
        ['response_gd',
         'text']),
                                       ('symbolic',
        ['response_gd',
         'text'])],
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [(0,)],
                                      'top-node': (0,)}}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 68L,
                       'folded-linenos': [],
                       'history': {u'file:C:/Users/pat/larry_drucker_2019/drucker/colors.py': ["c"\
        "['aliceblue']\n",
        "x=c['aliceblue']\n",
        'x\n',
        'type(x)\n',
        'x.hex_format()\n',
        'c\n',
        "colors('aliceblue')\n",
        "colors['aliceblue']\n",
        "colors['aliceblue'].hex_format()\n"],
                                   u'file:C:/Users/pat/larry_drucker_2019/drucker/drucker_python/_report_generators/produce_single_reports.py': ['f'\
        'ieldids = pd.Series(data.loc[firmid_col, :]).reset_index(drop=True)'\
        '\n',
        'data[firmid_col]\n',
        'data[firmID]\n',
        'row[col]\n',
        "'FirmID' in data\n",
        'data.index.name\n',
        'data.columns\n',
        'data.head()\n',
        'data.loc[firmID,:]\n',
        'row[1]\n',
        'row[1].value\n',
        'row\n',
        'len(d)\n',
        'd\n',
        'len(data)\n',
        'data.iloc[firmID,:]\n',
        '[label, row[col] + " "]\n'],
                                   u'file:C:/Users/pat/larry_drucker_2019/drucker/drucker_python/_report_generators/write_company_spreadsheets.py': ['v'\
        'alue="0,0,0"\n',
        'data\n',
        "wb.save(abs_path('t1.xlsx', os.path.join(path, top_level_dir)))\n",
        "wb.save(abs_path('t1.xlsx', os.path.join(path, top_level_agg_dir)))"\
        "\n",
        'firm_data\n',
        'for i in data.columns:\n   print(i)\n\n',
        'firm_data.shape\n'],
                                   u'file:C:/Users/pat/python_for_excel_users/basic_operations/sports.py': ['d'\
        'ir(utilities)\n',
        'utilitites.__file__\n',
        'utilities.__file__\n',
        "sys.path.insert(1,os.path.join(os.path.split(os.getcwd())[0], 'cust"\
        "_utilities'))\n",
        'import custom_utilities\n',
        'from custom_utilities import *\n',
        'os.getcwd()\n',
        "sys.path.insert(1,os.path.join(os.path.split(os.getcwd())[0], 'cust"\
        "om_utilities'))\n",
        'import cusom_utilities\n',
        "sys.path.insert(1,os.path.join(os.path.split(os.getcwd())[0], 'cust"\
        "om_utils'))\n",
        'sys.path\n',
        'import custom_utils\n',
        'import utilities\n',
        'dir (utilities)\n'],
                                   u'file:C:/Users/pat/python_for_excel_users/convert.py': ['i'\
        'mport os\n'],
                                   u'file:C:/Users/pat/python_for_excel_users/custom_utils/utilities.py': ['a'\
        '\n',
        'type(a)\n',
        'eval(a)\n',
        'self.args\n'],
                                   u'file:C:/Users/pat/python_for_excel_users/scratch.py': ["e"\
        "val ('a'=obj)\n",
        'eval (a=obj)\n',
        'eval a=boj\n',
        'a= obj\n',
        'locals()\n',
        "locals['a'] = arg\n",
        "locals()['a'] = arg\n",
        'str(args)\n',
        'for x in locals().itmes(): print(x)\n',
        'for x in locals().items(): print(x)\n',
        'str(locals())\n',
        'display_w(*obj_names)\n',
        'self.args\n',
        'args\n',
        'ser\n',
        'type(ser)\n',
        "sports_df['fans']\n",
        'sports_df\n',
        'sports[0:]=sports.columns\n',
        'sportsloc[0:]=sports.columns\n',
        'sports.loc[0:]=sports.columns\n',
        'sports_excel.index = pd.Index([1,2,3, 4])\n',
        'sports.index = pd.Index([1,2,3, 4])\n',
        'sports.append()\n',
        'sports.append([])\n',
        "sports.append(['soccer', 90, 5000, 22])\n",
        "sports.append([3,'soccer', 90, 5000, 22])\n",
        "sports.append(['soccer', 90, 5000])\n",
        "sports.append([['soccer', 90, 5000]])\n",
        "sports.append([[4,'soccer', 90, 5000]])\n",
        "sports.loc[4] = ['soccer', 90, 5000]\n",
        'del sports.loc[4]\n',
        'sports.drop(0)\n',
        'sports\n',
        'dir(sports)\n',
        'from numpy.math import radians, sin, cos, tan, asin, acos, atan\n',
        'import numpy.math\n',
        'from numpy import math\n',
        'math.sin\n',
        'math.sin(90)\n',
        'math.pi\n',
        'math.sin(0)\n',
        'math.sin(.5)\n',
        'math.sin(.5/math.pi)\n',
        'math.sin(math.pi)\n',
        'math.sin(math.pi/2)\n',
        'math.radians(90)\n',
        'math.radians(260)\n',
        'math.pi * 2\n',
        'math.radians(360)\n',
        "df['rad'] =df['deg'].apply(math.radians)\n",
        's = pd.Series()\n',
        "import warnings\nwarnings.filterwarnings('ignore')\n\n",
        'df\n',
        'df.astype(float)\n',
        'np.inf\n',
        '1/0\n',
        'a=df.plot()\n',
        'a.plot\n',
        'a.get_figure()\n',
        'f=a.get_figure()\n',
        'type(a)\n',
        'df.plot().figure\n',
        'df.plot().figuref = \n',
        'f=df.plot().figure\n',
        "f.savefig('junk.jpg')\n",
        "x=f.savefig('junk.jpg')\n",
        "df.plot.figure.savefigure('junk.jpg')\n",
        "df.plot().get_figure().savefigure('junk.jpg')\n",
        "df.plot().figure().savefigure('junk.jpg')\n",
        "df.plot().figure.savefigure('junk.jpg')\n",
        'x=df.plot()\n',
        'x\n',
        'df.plot()figure.savefig\n',
        'df.plot().figure.savefig\n',
        "df.plot().figure.savefig('junk.jpg')\n",
        'df.plot()\n',
        'a = df.plot()\n',
        'b=a.get_figure()\n',
        'b.properties\n',
        'b.properties()\n',
        "b.properties['size-inches'] = (10,10)\n",
        "b.set('size-inches', 10)\n",
        "b.set(['size-inches', 10])\n",
        'dir(b)\n',
        'b.set_size_inches((10,10))\n',
        'a = df.plot()\nb=a.get_figure()\n\n',
        'a.figure.set_size_inches((3,3))\n',
        'a.show()\n',
        'a\n',
        'b.set_size_inches((1,10))\n',
        'to_plot=fig\n',
        'to_plot=df.plot()\n',
        'fig = to_plt.plot().figure\nfig.set_size_inches((height_in, width_i'\
        'n))\nfig.savefig(path)\n\n',
        'to_plot=df\n',
        'height_in=3; width_in=\n',
        'height_in=3; width_in=3\n',
        "path = 'junk.jpg'\n",
        'fig = to_plot.plot().figure\nfig.set_size_inches((height_in, width_'\
        'in))\nfig.savefig(path)\n\n',
        "plot_image_save(df, 'junk.png')\n"]},
                       'launch-id': None,
                       'sel-line': 82L,
                       'sel-line-start': 7681L,
                       'selection_end': 7681L,
                       'selection_start': 7681L,
                       'zoom': 0L}),
                     ('python-shell',
                      'wide',
                      1,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 114L,
                       'folded-linenos': [],
                       'history': {None: ['a=1572830383\n',
        'hex(z)\n',
        'hex(a)\n',
        'hex(N8347)\n',
        "b = 'N8347'\n",
        'dec(hex(a))\n',
        'int(hex(a))\n',
        "c = '0x22b78f71'\n",
        'int(c)\n',
        "c = '22b78f71'\n",
        " bytes.fromhex(c).decode('utf-8')\n",
        'c\n',
        " bytes.fromhex(c).decode('ascii')\n",
        'import codecs\n\ndecode_hex = codecs.getdecoder("hex_codec")\n\n# f'\
        'or an array\nmsgs = [decode_hex(msg)[0] for msg in msgs]\n\n# for a'\
        ' string\nstring = decode_hex(string)[0]\n\n',
        'decode_hex\n',
        'decode_hex(c)\n',
        'msg = c\n',
        'decode_hex(msg)\n',
        'decode_hex(c)[0]\n',
        'a\n',
        'hex(b)\n',
        "hex('N')\n",
        'hex(8347)\n',
        'b\n',
        "b.encode('hex')\n",
        'b.encode()\n',
        'codecs.encode(b)\n',
        "codecs.encode(b, 'hex')\n",
        "codecs.encode(bytes(b), 'hex')\n",
        'bytes(b)\n',
        "bytes(b, 'hex')\n",
        'bytes(b, )\n',
        "bytes(b, 'utf-8')\n",
        'import os, sys\n',
        'pd\n',
        'import pandas as pd\n',
        'd = pd.DataFrame()\n',
        'type(d)\n',
        'isinstance(d, pd.DataFrame)\n']},
                       'launch-id': None,
                       'sel-line': 144L,
                       'sel-line-start': 4056L,
                       'selection_end': 4056L,
                       'selection_start': 4056L,
                       'zoom': 0L}),
                     ('os-command',
                      'wide',
                      2,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {})],
        'primary_view_state': {'editor_states': ('horizontal',
        1.0,
        ({'bookmarks': ([[loc('scratch.py'),
                          {'attrib-starts': [],
                           'first-line': 45L,
                           'folded-linenos': [],
                           'sel-line': 51L,
                           'sel-line-start': 1653L,
                           'selection_end': 1653L,
                           'selection_start': 1653L,
                           'zoom': 0L},
                          1572994966.228],
                         [loc('../../../Anaconda/envs/py37/Lib/site-packages/pandas/core/frame.py'),
                          {'attrib-starts': [('DataFrame',
        303),
        ('DataFrame.append',
         6976)],
                           'first-line': 7091L,
                           'folded-linenos': [],
                           'sel-line': 7100L,
                           'sel-line-start': 244903L,
                           'selection_end': 244903L,
                           'selection_start': 244903L,
                           'zoom': 0L},
                          1572994971.856],
                         [loc('scratch.py'),
                          {'attrib-starts': [],
                           'first-line': 43L,
                           'folded-linenos': [],
                           'sel-line': 49L,
                           'sel-line-start': 1588L,
                           'selection_end': 1588L,
                           'selection_start': 1588L,
                           'zoom': 0L},
                          1573015544.348],
                         [loc('../../../Anaconda/envs/py37/Lib/site-packages/IPython/core/formatters.py'),
                          {'attrib-starts': [],
                           'first-line': 246L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1573015583.805],
                         [loc('../../../Anaconda/envs/py37/Lib/site-packages/IPython/core/formatters.py'),
                          {'attrib-starts': [('format_display_data',
        990)],
                           'first-line': 629L,
                           'folded-linenos': [],
                           'sel-line': 990L,
                           'sel-line-start': 33743L,
                           'selection_end': 33766L,
                           'selection_start': 33747L,
                           'zoom': 0L},
                          1573061367.582],
                         [loc('scratch.py'),
                          {'attrib-starts': [],
                           'first-line': 43L,
                           'folded-linenos': [],
                           'sel-line': 49L,
                           'sel-line-start': 1588L,
                           'selection_end': 1588L,
                           'selection_start': 1588L,
                           'zoom': 0L},
                          1573064367.736],
                         [loc('custom_utils/display_wide.py'),
                          {'attrib-starts': [('display_wide',
        20)],
                           'first-line': 12L,
                           'folded-linenos': [],
                           'sel-line': 31L,
                           'sel-line-start': 1221L,
                           'selection_end': 1270L,
                           'selection_start': 1270L,
                           'zoom': 0L},
                          1573150571.637],
                         [loc('scratch.py'),
                          {'attrib-starts': [],
                           'first-line': 43L,
                           'folded-linenos': [],
                           'sel-line': 49L,
                           'sel-line-start': 1588L,
                           'selection_end': 1588L,
                           'selection_start': 1588L,
                           'zoom': 0L},
                          1573150604.744],
                         [loc('../../../Anaconda/envs/py37/Lib/site-packages/pandas/core/series.py'),
                          {'attrib-starts': [('_coerce_method',
        122),
        ('_coerce_method.wrapper',
         127)],
                           'first-line': 80L,
                           'folded-linenos': [],
                           'sel-line': 130L,
                           'sel-line-start': 3525L,
                           'selection_end': 3525L,
                           'selection_start': 3525L,
                           'zoom': 0L},
                          1573150643.671],
                         [loc('scratch.py'),
                          {'attrib-starts': [],
                           'first-line': 70L,
                           'folded-linenos': [],
                           'sel-line': 80L,
                           'sel-line-start': 2453L,
                           'selection_end': 2453L,
                           'selection_start': 2453L,
                           'zoom': 0L},
                          1573156217.907],
                         [loc('custom_utils/display_wide.py'),
                          {'attrib-starts': [('plot_image_save',
        57)],
                           'first-line': 54L,
                           'folded-linenos': [],
                           'sel-line': 68L,
                           'sel-line-start': 2529L,
                           'selection_end': 2534L,
                           'selection_start': 2534L,
                           'zoom': 0L},
                          1573161390.106],
                         [loc('convert.py'),
                          {'attrib-starts': [],
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 65L,
                           'selection_start': 65L,
                           'zoom': 0L},
                          1573161411.165],
                         [loc('convert.py'),
                          {'attrib-starts': [],
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 1L,
                           'sel-line-start': 17L,
                           'selection_end': 17L,
                           'selection_start': 17L,
                           'zoom': 0L},
                          1573161458.321],
                         [loc('../../../Anaconda/envs/py37/Lib/_bootlocale.py'),
                          {'attrib-starts': [('getpreferredencoding',
        32)],
                           'first-line': 6L,
                           'folded-linenos': [],
                           'sel-line': 13L,
                           'sel-line-start': 386L,
                           'selection_end': 386L,
                           'selection_start': 386L,
                           'zoom': 0L},
                          1573161466.571],
                         [loc('../../../Anaconda/envs/py37/Lib/site-packages/nbformat/converter.py'),
                          {'attrib-starts': [('convert',
        9)],
                           'first-line': 19L,
                           'folded-linenos': [],
                           'sel-line': 53L,
                           'sel-line-start': 2010L,
                           'selection_end': 2010L,
                           'selection_start': 2010L,
                           'zoom': 0L},
                          1573161498.152],
                         [loc('convert.py'),
                          {'attrib-starts': [],
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 1L,
                           'sel-line-start': 17L,
                           'selection_end': 17L,
                           'selection_start': 17L,
                           'zoom': 0L},
                          1573161498.827],
                         [loc('../../../Anaconda/envs/py37/Lib/site-packages/nbformat/converter.py'),
                          {'attrib-starts': [('convert',
        9)],
                           'first-line': 19L,
                           'folded-linenos': [],
                           'sel-line': 28L,
                           'sel-line-start': 944L,
                           'selection_end': 970L,
                           'selection_start': 970L,
                           'zoom': 0L},
                          1573161732.911],
                         [loc('custom_utils/display_wide.py'),
                          {'attrib-starts': [('plot_image_save',
        62)],
                           'first-line': 45L,
                           'folded-linenos': [],
                           'sel-line': 62L,
                           'sel-line-start': 2226L,
                           'selection_end': 2260L,
                           'selection_start': 2260L,
                           'zoom': 0L},
                          1573169014.453],
                         [loc('scratch.py'),
                          {'attrib-starts': [],
                           'first-line': 45L,
                           'folded-linenos': [],
                           'sel-line': 64L,
                           'sel-line-start': 1884L,
                           'selection_end': 1884L,
                           'selection_start': 1884L,
                           'zoom': 0L},
                          1573169427.615],
                         [loc('custom_utils/display_wide.py'),
                          {'attrib-starts': [],
                           'first-line': 86L,
                           'folded-linenos': [],
                           'sel-line': 90L,
                           'sel-line-start': 3185L,
                           'selection_end': 3189L,
                           'selection_start': 3189L,
                           'zoom': 0L},
                          1573184368.084]],
                        20),
          'current-loc': loc('scratch.py'),
          'editor-state-list': [(loc('basic_operations/sports.py'),
                                 {'attrib-starts': [],
                                  'first-line': 0L,
                                  'folded-linenos': [],
                                  'sel-line': 3L,
                                  'sel-line-start': 39L,
                                  'selection_end': 39L,
                                  'selection_start': 39L,
                                  'zoom': 0L}),
                                (loc('../.jupyter/custom/custom.css'),
                                 {'attrib-starts': [],
                                  'first-line': 69L,
                                  'folded-linenos': [],
                                  'sel-line': 100L,
                                  'sel-line-start': 3269L,
                                  'selection_end': 3273L,
                                  'selection_start': 3273L,
                                  'zoom': 0L}),
                                (loc('Custom Display Logic Demo.html'),
                                 {'attrib-starts': [],
                                  'first-line': 0L,
                                  'folded-linenos': [],
                                  'sel-line': 0L,
                                  'sel-line-start': 0L,
                                  'selection_end': 0L,
                                  'selection_start': 0L,
                                  'zoom': 0L}),
                                (loc('basic_operations/notes.py'),
                                 {}),
                                (loc('basic_operations/sports_compressed.py'),
                                 {}),
                                (loc('basic_operations/sports_data_tab.py'),
                                 {}),
                                (loc('../PythonDataScienceHandbook/notebooks/03.06-Concat-And-Append.ipynb'),
                                 {'attrib-starts': [],
                                  'first-line': 128L,
                                  'folded-linenos': [],
                                  'sel-line': 131L,
                                  'sel-line-start': 4434L,
                                  'selection_end': 4664L,
                                  'selection_start': 4657L,
                                  'zoom': 0L}),
                                (loc('custom_utils/utilities.py'),
                                 {'attrib-starts': [('create_sports_data',
        51)],
                                  'first-line': 36L,
                                  'folded-linenos': [],
                                  'sel-line': 52L,
                                  'sel-line-start': 2107L,
                                  'selection_end': 2148L,
                                  'selection_start': 2148L,
                                  'zoom': 0L}),
                                (loc('scratch.py'),
                                 {'attrib-starts': [],
                                  'first-line': 63L,
                                  'folded-linenos': [],
                                  'sel-line': 77L,
                                  'sel-line-start': 2348L,
                                  'selection_end': 2351L,
                                  'selection_start': 2351L,
                                  'zoom': 0L}),
                                (loc('custom_utils/display_wide.py'),
                                 {'attrib-starts': [],
                                  'first-line': 86L,
                                  'folded-linenos': [],
                                  'sel-line': 90L,
                                  'sel-line-start': 3185L,
                                  'selection_end': 3189L,
                                  'selection_start': 3189L,
                                  'zoom': 0L}),
                                (loc('support_files/sports.csv'),
                                 {'attrib-starts': [],
                                  'first-line': 0L,
                                  'folded-linenos': [],
                                  'sel-line': 1L,
                                  'sel-line-start': 21L,
                                  'selection_end': 37L,
                                  'selection_start': 37L,
                                  'zoom': 2L}),
                                (loc('convert.py'),
                                 {'attrib-starts': [],
                                  'first-line': 0L,
                                  'folded-linenos': [],
                                  'sel-line': 1L,
                                  'sel-line-start': 17L,
                                  'selection_end': 17L,
                                  'selection_start': 17L,
                                  'zoom': 0L}),
                                (loc('../../../Anaconda/envs/py37/Lib/site-packages/nbformat/converter.py'),
                                 {'attrib-starts': [('convert',
        9)],
                                  'first-line': 19L,
                                  'folded-linenos': [],
                                  'sel-line': 28L,
                                  'sel-line-start': 944L,
                                  'selection_end': 970L,
                                  'selection_start': 970L,
                                  'zoom': 0L})],
          'has-focus': True,
          'locked': False},
         [loc('basic_operations/sports.py'),
          loc('../.jupyter/custom/custom.css'),
          loc('Custom Display Logic Demo.html'),
          loc('basic_operations/notes.py'),
          loc('basic_operations/sports_compressed.py'),
          loc('basic_operations/sports_data_tab.py'),
          loc('../PythonDataScienceHandbook/notebooks/03.06-Concat-And-Append.ipynb'),
          loc('custom_utils/utilities.py'),
          loc('scratch.py'),
          loc('custom_utils/display_wide.py'),
          loc('support_files/sports.csv'),
          loc('convert.py'),
          loc('../../../Anaconda/envs/py37/Lib/site-packages/nbformat/converter.py')]),
        ({'bookmarks': ([[loc('../../../Anaconda/envs/py37/Lib/ntpath.py'),
                          {'attrib-starts': [('join',
        74)],
                           'first-line': 47L,
                           'folded-linenos': [],
                           'sel-line': 75L,
                           'sel-line-start': 2399L,
                           'selection_end': 2399L,
                           'selection_start': 2399L,
                           'zoom': 0L},
                          1572552596.173],
                         [loc('utilities/utilities.py'),
                          {'attrib-starts': [('create_sports_data',
        5)],
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 6L,
                           'sel-line-start': 143L,
                           'selection_end': 182L,
                           'selection_start': 182L,
                           'zoom': 0L},
                          1572559059.081],
                         [loc('../_larry_drucker 2018_local_backup_only/drucker/drucker_python/utilities/trends.py'),
                          {'attrib-starts': [],
                           'first-line': 15L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1572559077.106],
                         [loc('../_larry_drucker 2018_local_backup_only/drucker/drucker_python/utilities/utilities.py'),
                          {'attrib-starts': [('compute_one_z',
        298)],
                           'first-line': 702L,
                           'folded-linenos': [],
                           'sel-line': 300L,
                           'sel-line-start': 11115L,
                           'selection_end': 11166L,
                           'selection_start': 11118L,
                           'zoom': 0L},
                          1572559109.8],
                         [loc('../_larry_drucker 2018_local_backup_only/drucker/drucker_python/utilities/test_utilities.py'),
                          {'attrib-starts': [],
                           'first-line': 165L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1572559126.79],
                         [loc('../_larry_drucker 2018_local_backup_only/drucker/drucker_python/utilities/test_utilities.py'),
                          {'attrib-starts': [],
                           'first-line': 1342L,
                           'folded-linenos': [],
                           'sel-line': 1371L,
                           'sel-line-start': 68947L,
                           'selection_end': 68947L,
                           'selection_start': 68947L,
                           'zoom': 0L},
                          1572559133.97],
                         [loc('../_larry_drucker 2018_local_backup_only/drucker/drucker_python/utilities/test_utility_settings.py'),
                          {'attrib-starts': [],
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1572559136.646],
                         [loc('../_larry_drucker 2018_local_backup_only/drucker/drucker_python/utilities/trends.py'),
                          {'attrib-starts': [],
                           'first-line': 42L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1572559230.142],
                         [loc('../_larry_drucker 2018_local_backup_only/drucker/drucker_python/utilities/test_utilities.py'),
                          {'attrib-starts': [],
                           'first-line': 1330L,
                           'folded-linenos': [],
                           'sel-line': 1371L,
                           'sel-line-start': 68947L,
                           'selection_end': 68947L,
                           'selection_start': 68947L,
                           'zoom': 0L},
                          1572559247.708],
                         [loc('../_larry_drucker 2018_local_backup_only/drucker/drucker_python/utilities/test_utilities.py'),
                          {'attrib-starts': [('TestPandasFunctions',
        1294)],
                           'first-line': 12L,
                           'folded-linenos': [],
                           'sel-line': 1294L,
                           'sel-line-start': 65646L,
                           'selection_end': 65671L,
                           'selection_start': 65652L,
                           'zoom': 0L},
                          1572723903.883],
                         [loc('utilities/utilities.py'),
                          {'attrib-starts': [('create_sports_data',
        5)],
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 6L,
                           'sel-line-start': 143L,
                           'selection_end': 182L,
                           'selection_start': 182L,
                           'zoom': 0L},
                          1572723905.658],
                         [loc('basic_operations/sports.py'),
                          {'attrib-starts': [('create_data',
        6)],
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 6L,
                           'sel-line-start': 87L,
                           'selection_end': 437L,
                           'selection_start': 87L,
                           'zoom': 0L},
                          1572723921.036],
                         [loc('basic_operations/chartme_for_data.xlsx'),
                          {'attrib-starts': [],
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1572723925.05],
                         [loc('basic_operations/sports.py'),
                          {'attrib-starts': [('create_data',
        6)],
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 9L,
                           'sel-line-start': 164L,
                           'selection_end': 173L,
                           'selection_start': 173L,
                           'zoom': 0L},
                          1572744349.251],
                         [loc('basic_operations/sports_compressed.py'),
                          {'attrib-starts': [],
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1572744354.449],
                         [loc('basic_operations/sports.py'),
                          {'attrib-starts': [('create_data',
        6)],
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 9L,
                           'sel-line-start': 164L,
                           'selection_end': 173L,
                           'selection_start': 173L,
                           'zoom': 0L},
                          1572744356.332],
                         [loc('basic_operations/notes.py'),
                          {'attrib-starts': [],
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1572744358.234],
                         [loc('basic_operations/sports.py'),
                          {'attrib-starts': [('create_data',
        6)],
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 9L,
                           'sel-line-start': 164L,
                           'selection_end': 173L,
                           'selection_start': 173L,
                           'zoom': 0L},
                          1572744360.476],
                         [loc('basic_operations/sports_data_tab.py'),
                          {'attrib-starts': [],
                           'first-line': 42L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1572744370.898],
                         [loc('basic_operations/sports.py'),
                          {'attrib-starts': [],
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 577L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1572744464.658]],
                        20),
          'current-loc': loc('../.jupyter/custom/custom.css'),
          'editor-state-list': [(loc('../PythonDataScienceHandbook/notebooks/03.06-Concat-And-Append.ipynb'),
                                 {'attrib-starts': [],
                                  'first-line': 128L,
                                  'folded-linenos': [],
                                  'sel-line': 131L,
                                  'sel-line-start': 4434L,
                                  'selection_end': 4664L,
                                  'selection_start': 4657L,
                                  'zoom': 0L}),
                                (loc('../../../Anaconda/envs/py37/Lib/site-packages/nbformat/converter.py'),
                                 {}),
                                (loc('Custom Display Logic Demo.html'),
                                 {}),
                                (loc('../.jupyter/custom/custom.css'),
                                 {'attrib-starts': [],
                                  'first-line': 9L,
                                  'folded-linenos': [],
                                  'sel-line': 73L,
                                  'sel-line-start': 2216L,
                                  'selection_end': 2268L,
                                  'selection_start': 2268L,
                                  'zoom': 0L}),
                                (loc('basic_operations/sports.py'),
                                 {'attrib-starts': [],
                                  'first-line': 0L,
                                  'folded-linenos': [],
                                  'sel-line': 0L,
                                  'sel-line-start': 0L,
                                  'selection_end': 593L,
                                  'selection_start': 0L,
                                  'zoom': 0L}),
                                (loc('basic_operations/sports_compressed.py'),
                                 {'attrib-starts': [],
                                  'first-line': 0L,
                                  'folded-linenos': [],
                                  'sel-line': 0L,
                                  'sel-line-start': 0L,
                                  'selection_end': 0L,
                                  'selection_start': 0L,
                                  'zoom': 0L}),
                                (loc('basic_operations/notes.py'),
                                 {'attrib-starts': [],
                                  'first-line': 0L,
                                  'folded-linenos': [],
                                  'sel-line': 0L,
                                  'sel-line-start': 0L,
                                  'selection_end': 0L,
                                  'selection_start': 0L,
                                  'zoom': 0L}),
                                (loc('basic_operations/sports_data_tab.py'),
                                 {'attrib-starts': [],
                                  'first-line': 42L,
                                  'folded-linenos': [],
                                  'sel-line': 0L,
                                  'sel-line-start': 0L,
                                  'selection_end': 0L,
                                  'selection_start': 0L,
                                  'zoom': 0L}),
                                (loc('scratch.py'),
                                 {}),
                                (loc('custom_utils/display_wide.py'),
                                 {}),
                                (loc('support_files/sports.csv'),
                                 {'attrib-starts': [],
                                  'first-line': 0L,
                                  'folded-linenos': [],
                                  'sel-line': 6L,
                                  'sel-line-start': 103L,
                                  'selection_end': 103L,
                                  'selection_start': 103L,
                                  'zoom': 2L}),
                                (loc('convert.py'),
                                 {}),
                                (loc('custom_utils/utilities.py'),
                                 {})],
          'has-focus': False,
          'locked': False},
         [loc('../PythonDataScienceHandbook/notebooks/03.06-Concat-And-Append.ipynb'),
          loc('../../../Anaconda/envs/py37/Lib/site-packages/nbformat/converter.py'),
          loc('Custom Display Logic Demo.html'),
          loc('../.jupyter/custom/custom.css'),
          loc('basic_operations/sports.py'),
          loc('basic_operations/sports_compressed.py'),
          loc('basic_operations/notes.py'),
          loc('basic_operations/sports_data_tab.py'),
          loc('scratch.py'),
          loc('custom_utils/display_wide.py'),
          loc('support_files/sports.csv'),
          loc('convert.py'),
          loc('custom_utils/utilities.py')])),
                               'open_files': [u'Custom Display Logic Demo.html',
        u'basic_operations/notes.py',
        u'basic_operations/sports_compressed.py',
        u'basic_operations/sports_data_tab.py',
        u'../.jupyter/custom/custom.css',
        u'../PythonDataScienceHandbook/notebooks/03.06-Concat-And-Append.ipynb',
        u'basic_operations/sports.py',
        u'custom_utils/utilities.py',
        u'support_files/sports.csv',
        u'convert.py',
        u'custom_utils/display_wide.py',
        u'scratch.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.28364222401289285,
                           1: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5174825174825175},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (147,
                         74,
                         1601,
                         839)}]}
guimgr.recent-documents = [loc('scratch.py'),
                           loc('custom_utils/display_wide.py'),
                           loc('../../../Anaconda/envs/py37/Lib/site-packages/nbformat/converter.py'),
                           loc('convert.py'),
                           loc('support_files/sports.csv'),
                           loc('custom_utils/utilities.py'),
                           loc('basic_operations/sports.py'),
                           loc('../.jupyter/custom/custom.css'),
                           loc('../PythonDataScienceHandbook/notebooks/03.06-Concat-And-Append.ipynb')]
guimgr.visual-state = {loc('../../../Anaconda/envs/py37/Lib/ntpath.py'): {'a'\
        'ttrib-starts': [('join',
                          74)],
        'first-line': 47L,
        'folded-linenos': [],
        'sel-line': 75L,
        'sel-line-start': 2399L,
        'selection_end': 2399L,
        'selection_start': 2399L,
        'zoom': 0L},
                       loc('../../../Anaconda/envs/py37/Lib/site-packages/IPython/core/formatters.py'): {'a'\
        'ttrib-starts': [('format_display_data',
                          990)],
        'first-line': 629L,
        'folded-linenos': [],
        'sel-line': 990L,
        'sel-line-start': 33743L,
        'selection_end': 33766L,
        'selection_start': 33747L,
        'zoom': 0L},
                       loc('../../../Anaconda/envs/py37/Lib/site-packages/openpyxl/drawing/geometry.py'): {'a'\
        'ttrib-starts': [('Bevel',
                          295),
                         ('Bevel.__init__',
                          307)],
        'first-line': 283L,
        'folded-linenos': [],
        'sel-line': 312L,
        'sel-line-start': 8560L,
        'selection_end': 8560L,
        'selection_start': 8560L,
        'zoom': 0L},
                       loc('../../../Anaconda/envs/py37/Lib/site-packages/pandas/core/generic.py'): {'a'\
        'ttrib-starts': [('NDFrame',
                          123),
                         ('NDFrame.to_json',
                          2259)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 2310L,
        'sel-line-start': 72404L,
        'selection_end': 72411L,
        'selection_start': 72411L,
        'zoom': 0L},
                       loc('../../../Anaconda/envs/py37/Lib/site-packages/xlsxwriter/__init__.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../Anaconda/envs/py37/Lib/site-packages/xlsxwriter/workbook.py'): {'a'\
        'ttrib-starts': [('Workbook',
                          45),
                         ('Workbook.add_vba_project',
                          273)],
        'first-line': 278L,
        'folded-linenos': [],
        'sel-line': 286L,
        'sel-line-start': 8820L,
        'selection_end': 8837L,
        'selection_start': 8837L,
        'zoom': 0L},
                       loc('../_larry_drucker 2018_local_backup_only/drucker/drucker_python/utilities/test_utilities.py'): {'a'\
        'ttrib-starts': [('TestPandasFunctions',
                          1294)],
        'first-line': 12L,
        'folded-linenos': [],
        'sel-line': 1294L,
        'sel-line-start': 65646L,
        'selection_end': 65671L,
        'selection_start': 65652L,
        'zoom': 0L},
                       loc('../_larry_drucker 2018_local_backup_only/drucker/drucker_python/utilities/utilities.py'): {'a'\
        'ttrib-starts': [('compute_one_z',
                          298)],
        'first-line': 702L,
        'folded-linenos': [],
        'sel-line': 300L,
        'sel-line-start': 11115L,
        'selection_end': 11166L,
        'selection_start': 11118L,
        'zoom': 0L},
                       loc('basic_operations/chartme_for_data.xlsx'): {'attr'\
        'ib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('support_files/__init__.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('support_files/sports.csv'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 6L,
        'sel-line-start': 103L,
        'selection_end': 103L,
        'selection_start': 103L,
        'zoom': 2L},
                       loc('utilities/utilities.py'): {'attrib-starts': [('d'\
        'isplaym',
        19)],
        'first-line': 12L,
        'folded-linenos': [],
        'sel-line': 19L,
        'sel-line-start': 470L,
        'selection_end': 483L,
        'selection_start': 483L,
        'zoom': 0L},
                       loc('551A9150'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('notes.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 1L,
        'sel-line-start': 5L,
        'selection_end': 65L,
        'selection_start': 65L,
        'zoom': 0L},
                       loc('sports_compressed.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 52L,
        'sel-line-start': 1829L,
        'selection_end': 2230L,
        'selection_start': 1829L,
        'zoom': 0L},
                       loc('spreadsheet_functions.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 10L,
        'sel-line-start': 196L,
        'selection_end': 209L,
        'selection_start': 209L,
        'zoom': 0L}}
proj.pyexec = {None: ('custom',
                      u'c:\\Anaconda\\envs\\py37\\python.exe')}
search.search-history = [u'%',
                         u'apply(',
                         u'display',
                         u'disp',
                         u'calc_time_vals',
                         u'calc_time_val',
                         u'calc_time_values',
                         u'calc_',
                         u'calc']
testing.stored-results = (1,
                          [],
                          {})
